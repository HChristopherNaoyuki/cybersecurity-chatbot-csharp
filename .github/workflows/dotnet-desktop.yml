# Cybersecurity Chatbot CI Pipeline
# Simplified version focusing on core build/test operations
name: .NET Core CI

# Trigger on pushes and PRs to main branch only
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    # Use Ubuntu runner for better compatibility
    runs-on: ubuntu-latest
    
    steps:
    # ----------------------------------
    # STEP 1: Checkout code
    # ----------------------------------
    - name: Checkout repository
      uses: actions/checkout@v4
      # Simple checkout without history to speed up process
      
    # ----------------------------------
    # STEP 2: Setup .NET
    # ----------------------------------
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'  # Latest stable .NET 8 version
        
    # ----------------------------------
    # STEP 3: Restore dependencies
    # ----------------------------------
    - name: Restore dependencies
      run: dotnet restore ./cybersecurity-chatbot-csharp.sln
      # Explicit solution file path prevents ambiguity
      
    # ----------------------------------
    # STEP 4: Build solution
    # ----------------------------------
    - name: Build solution
      run: dotnet build ./cybersecurity-chatbot-csharp.sln --configuration Release --no-restore
      # Key flags:
      # --configuration Release: Production-optimized build
      # --no-restore: Skip redundant package restoration
      
    # ----------------------------------
    # STEP 5: Run tests
    # ----------------------------------
    - name: Run unit tests
      run: dotnet test ./cybersecurity-chatbot-csharp.sln --configuration Release --no-build --verbosity normal
      # Key flags:
      # --no-build: Use existing build output
      # --verbosity normal: Balanced log output
      
    # ----------------------------------
    # STEP 6: Package artifacts
    # ----------------------------------
    - name: Create publish package
      run: |
        mkdir -p ./publish
        dotnet publish ./cybersecurity-chatbot-csharp/cybersecurity-chatbot-csharp.csproj \
          --configuration Release \
          --output ./publish \
          --no-restore \
          --no-build \
          -p:PublishSingleFile=true \
          -p:PublishTrimmed=true
      # Creates self-contained, optimized deployment package
      
    # ----------------------------------
    # STEP 7: Upload artifacts
    # ----------------------------------
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: chatbot-release
        path: ./publish
        retention-days: 3  # Short retention to save storage
